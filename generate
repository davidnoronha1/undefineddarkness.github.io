#!/usr/bin/env bash

# Init:

# Enable bash options
shopt -s globstar
shopt -s nullglob

template_pre_content=
template_post_content=
server='deno run --unstable -A ./.tooling/server/server.ts --port=5000 --live=false'

# Helpers:
format_doc_heading () {
	doc_path=${1#'./src/'}
	doc_path=${doc_path%'.'*}

	[[ "$markup" =~ \<h1\>(.*)\<\/h1\> ]]
	doc_title=${BASH_REMATCH[1]}
	doc_title=${doc_title/'<span class="reset">'/}
	doc_title=${doc_title/'</span>'/}
	
	doc_heading=${template_pre_content/'!DOCUMENT-PATH!'/"$doc_path"}
	doc_heading=${doc_heading/'!TITLE!'/"$doc_title"}
}

# Tasks:
build_md () {
	out=${1/src/out}
	out=${out/.md/.html}
	printf '%s -> %s\n' "$1" "$out"
	markup=$(bash ./.tooling/pond.sh $1)
	format_doc_heading "$out"
	printf '%s\n%s\n%s' "$doc_heading" "$markup" "$template_post_content" > "$out"
}

build_html () {
	out=${1/src/out}
	printf '%s -> %s\n' "$1" "$out"
	cp -v $1 $out
}

build_org () {
	out=${1/src/out}
	out=${out/.org/.html}
	emacs $1 --batch -l $XDG_CONFIG_HOME/emacs/init.el -f org-html-export-to-html
	printf '%s -> %s\n' "$1" "$out"
	mv ${1/.org/.html} ${out}
}

# Default: Build All Files

case "$1" in
	"serve")
		$server
		exit
	;;
esac

itermediate=
IFS="
"
while read -r line; do
	if [[ "$line" == *"!CONTENT!" ]]; then
		template_pre_content=$intermediate
		intermediate=
		continue
	fi
	intermediate+=$line$IFS
done < ./template.html
template_post_content=$intermediate

for file in ./src/**/*.html ./src/*.html ./src/*.md ./src/**/*.md ./src/**/*.org ./src/*.org; do
	case "${file##*.}" in
		'org')
			build_org "$file" &
		;;
		'html')
			build_html "$file" &
		;;
		'md')
			build_md "$file" &
		;;
	esac
done
